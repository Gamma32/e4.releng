<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<available property="allElementsFile" file="${builder}/allElements.xml" value="${builder}/allElements.xml"/>
	<property name="allElementsFile" location="${eclipse.pdebuild.templates}/headless-build/allElements.xml"/>

	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}/${eclipseBaseName}" dest="${buildDirectory}/../${eclipseBaseName}" />
		<untar compression="gzip" dest="${base}" overwrite="true" src="${buildDirectory}/../${eclipseBaseName}" />
		<get src="${eclipseBaseURL}/${eclipseTestName}" dest="${buildDirectory}/../${eclipseTestName}" />
		<unzip dest="${base}/tmp" overwrite="true" src="${buildDirectory}/../${eclipseTestName}" />
		<unzip dest="${base}" overwrite="true" src="${base}/tmp/eclipse-testing/eclipse-junit-tests-${eclipseBuildId}.zip" />
		<delete dir="${base}/tmp" quiet="true"></delete>
		<get src="${emfBaseURL}/${emfBaseName}" dest="${buildDirectory}/../${emfBaseName}" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../${emfBaseName}" />
		<get src="${emfBaseURL}/${xsdBaseName}" dest="${buildDirectory}/../${xsdBaseName}" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../${xsdBaseName}" />
		<get src="${gefBaseURL}/${gefBaseName}" dest="${buildDirectory}/../${gefBaseName}" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../${gefBaseName}" />
		<get src="${wstBaseURL}/${wstBaseName}" dest="${buildDirectory}/../${wstBaseName}" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../${wstBaseName}" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
		<antcall target="tagMapFiles" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />
		<xslt style="${builder}/patch-ver.xsl" in="${p2.repo}/content.xml" out="${p2.repo}/out_content.xml">
			<outputproperty name="method" value="xml"/>
		</xslt>
		<move file="${p2.repo}/out_content.xml" tofile="${p2.repo}/content.xml" />
		<tstamp>
		<format property="repmaindate" pattern="yyyy MMMM dd HH:mm" locale="en"/>
		</tstamp>
		<filter token="repbuildid" value="${buildLabel}"/>
		<filter token="repmaindate" value="${repmaindate}"/>
		<filter token="repbuilddate" value="${buildLabel}"/>
		<filter token="repbuildsize" value="32 MB"/>
		<filter token="timestamp" value="${timestamp}"/>
		<filter token="buildType" value="${buildType}"/>
		<filter token="buildId" value="${buildId}"/>
		<filter token="buildLabel" value="${buildLabel}"/>
		<filter token="eclipseIbuild" value="${eclipseBuildId}"/>
		<copy filtering="true" file="${builder}/../../templates/build.index.html" tofile="${buildDirectory}/${buildLabel}/index.html" />
		<copy filtering="true" file="${builder}/tests/build.label.properties" tofile="${buildDirectory}/label.properties" />
		
		<copy file="${builder}/../../templates/FAIL.gif" tofile="${buildDirectory}/${buildLabel}/FAIL.gif" />
		<copy file="${builder}/../../templates/new.gif" tofile="${buildDirectory}/${buildLabel}/new.gif" />
		<copy file="${builder}/../../templates/OK.gif" tofile="${buildDirectory}/${buildLabel}/OK.gif" />
		<copy file="${builder}/../../templates/build.download.php" tofile="${buildDirectory}/${buildLabel}/download.php" />
		<move file="${buildDirectory}/${buildLabel}/${topLevelElementId}-${buildId}-group.group.group.zip" tofile="${buildDirectory}/${buildLabel}/${topLevelElementId}-${buildLabel}.zip" />
		<copy file="${buildDirectory}/directory.txt" todir="${buildDirectory}/${buildLabel}" />
		<generateTestProperties
					buildDirectory="${buildDirectory}"
					featureId="org.eclipse.e4.resources.tests.feature"
					outputFile="${buildDirectory}/test.properties"
				/>
		<generateTestProperties
					buildDirectory="${buildDirectory}"
					featureId="org.eclipse.e4.swt.tests.feature"
					outputFile="${buildDirectory}/test.properties"
				/>
		<generateTestProperties
					buildDirectory="${buildDirectory}"
					featureId="org.eclipse.e4.ui.tests.feature"
					outputFile="${buildDirectory}/test.properties"
				/>
		<generateTestProperties
					buildDirectory="${buildDirectory}"
					featureId="org.eclipse.e4.xwt.tests.feature"
					outputFile="${buildDirectory}/test.properties"
				/>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
