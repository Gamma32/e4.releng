<project name="Automated Eclipse Testing" default="all" basedir=".">


	
	<!--properties file containing the build information-->
	<property file="label.properties" />

	<property name="runtimeArchivePrefix" value="eclipse-SDK" />
	
	<!--default directory where test-eclipse will be installed-->
	<property name="install" value="${basedir}/test-eclipse" />

	<!--suffix added to test output files to identify platform on which tests ran.-->
	<property name="platform" value="${os}.${ws}.${arch}" />

	<!-- The root of the eclipse installation -->
	<property name="eclipse-home" value="${install}/eclipse" />

	<property name="repoLocation" value="${basedir}/testComposite"/>

	<!-- The directory that will contain all files containing information on the tests that ran.-->
	<property name="results" value="${basedir}/results" />

	<!--Directory for JUnit report output, console log output and .log content for each test suite.  
			Overrides default in org.eclipse.test/library.xml-->
	<property name="junit-report-output" value="${results}/${platform}" />

	<!--Directory name of org.eclipse.test plug-in installed in ${eclipse-home}-->
	<property name="org.eclipse.test" value="org.eclipse.test_3.3.100" />

	<target name="setup" unless="noclean" depends="init">
		<echo message="Runtime Archive is ${runtimeArchive}" />
		<condition property="setupTarget" value="setup-zip">
			<contains string="${runtimeArchive}" substring=".zip" />
		</condition>
		<condition property="setupTarget" value="setup-tar.gz">
			<contains string="${runtimeArchive}" substring=".tar.gz" />
		</condition>
		<antcall target="${setupTarget}" />
		<antcall target="configureTeamTest" />
		<antcall target="configureDeltaPack" />
	</target>

	<target name="cleanup" >
		<delete failonerror="false" >
			<fileset dir="${eclipse-home}" includes="**/*" excludes="${eclipse-home}/eclipse/configuration" />
		</delete>
	</target>
	
	<!--setup for zip archives-->
	<target name="setup-zip" description="Reinstall the test Eclipse installation if specified by user">
		<delete dir="${install}" />
		<mkdir dir="${install}" />
		<exec dir="." executable="unzip">
			<arg line="-o -qq ${runtimeArchive} -d ${install}" />
		</exec>
		<antcall target="installTestPlugins" />
	</target>

	<!--setup for tar.gz archives-->
	<target name="setup-tar.gz" description="Reinstall the test Eclipse installation if specified by user">
		<property name="currentDir" value="${basedir}" />
		<delete dir="${install}" />
		<mkdir dir="${install}" />
		<exec dir="${install}" executable="tar">
			<arg line="-xzf ${currentDir}/${runtimeArchive}" />
		</exec>
		<antcall target="installTestPlugins" />
	</target>

	<target name="installTestPlugins">
		<echo>-installIU ${testPlugin} +</echo>
		<property name="additionalPlugins" value="" />
		<exec executable="${eclipse-home}/eclipse" failonerror="false" dir="${eclipse-home}" timeout="900000" output="${results}/director.log" resultproperty="directorcode">
			<arg line="-vm /opt/public/common/jdk-1.6.x86_64/bin/java" />
			<arg line="-application org.eclipse.equinox.p2.director" />
			<arg line="-nosplash" />
			<arg line="--launcher.suppressErrors" />
			<arg line="-consoleLog" />
			<arg line="-flavor tooling" />
			<arg line="-installIUs ${testPlugin},org.eclipse.test,org.eclipse.ant.optional.junit,${additionalPlugins}" />
			<arg line="-p2.os ${os}" />
			<arg line="-p2.ws ${ws}" />
			<arg line="-p2.arch ${arch}" />
			<arg line="-roaming" />
			<arg line="-profile SDKProfile" />
			<arg line="-repository file:${repoLocation}" />
			<arg line="-destination ${eclipse-home}" />
			<arg line="-bundlepool ${eclipse-home}" />
		</exec>
		<antcall target="unzipderby" />
	</target>

	<target name="unzipderby" if="derby">
		<exec dir="." executable="unzip">
			<arg line="-o eclipse-junit-tests-*.zip ${derby} -d ${install}" />
		</exec>
	</target>


	<target name="init" depends="setRuntimeArchive">
		<mkdir dir="${results}/xml" />
		<mkdir dir="${results}/html" />
		<mkdir dir="${junit-report-output}" />

		<property file="${sdkResults}/../eclipseRepoURL.properties"/>
		
		<pathconvert property="sdkRepo" >
			<last><sort><dirset dir="${sdkRepositoryRoot}" includes="${buildType}*" /></sort></last>
		</pathconvert>
		<pathconvert property="e4Repo" >
			<last><sort><dirset dir="${e4RepositoryRoot}" includes="${buildType}*" /></sort></last>
		</pathconvert>
		
		<mkdir dir="${repoLocation}"/>
		<p2.composite.repository destination="file:${repoLocation}" >
			<add location="file:${sdkRepo}" />
			<add location="file:${e4Repo}" />
			<add location="file:${e4.targetDir}/emf" />
			<add location="file:${e4.targetDir}/gef" />
			<add location="file:${e4.targetDir}/wtp" />
			<add location="${eclipseRepoURL-latest}"/>
		</p2.composite.repository>
		
		<!--Unlock files on the Mac before starting tests.
		  Required to delete some workspace directories (org.eclipse.core.filebuffers.tests and Team CVS tests).-->
		<exec dir="${basedir}" executable="chflags" os="Mac OS X">
			<arg line="-R nouchg ${install}" />
		</exec>
	</target>

	<target name="setRuntimeArchive">
		<fileset id="archive.id" dir="${basedir}" includes="${runtimeArchivePrefix}*" />
		<property name="runtimeArchive" refid="archive.id" />
	</target>

	<target name="setJVMProperties" depends="setJVMfromUserSpecified">
		<!--enable tests requiring 1.5 or 1.6 vms to run if running vm level detected matches required execution environment-->
		<condition property="J2SE-5.0" value="${java.home}/bin/java">
			<or>
				<equals arg1="${ant.java.version}" arg2="1.5" />
				<equals arg1="${ant.java.version}" arg2="1.6" />
			</or>
		</condition>
		<condition property="J2SE-6.0" value="${java.home}/bin/java">
			<equals arg1="${ant.java.version}" arg2="1.6" />
		</condition>

	</target>
	<target name="setJVMfromUserSpecified" if="jvm">
		<exec executable="${jvm}" outputproperty="javaversion">
			<arg line="-version" />
		</exec>
		<echo message="java version of ${jvm} is ${javaversion}" />
		<condition property="J2SE-6.0" value="${jvm}">
			<contains string="${javaversion}" substring="java version &quot;1.6" />
		</condition>
		<condition property="J2SE-5.0" value="${jvm}">
			<or>
				<contains string="${javaversion}" substring="java version &quot;1.6" />
				<contains string="${javaversion}" substring="java version &quot;1.5" />
			</or>
		</condition>
		<echo message="J2SE-6.0:  ${J2SE-6.0}" />
		<echo message="J2SE-5.0:  ${J2SE-5.0}" />
	</target>
	<target name="configureTeamTest" if="teamcvs">
		<!-- Fill in cvs repository information -->
		<replace file="${eclipse-home}/dropins/eclipse/plugins/${org.eclipse.team.tests.cvs.core}/repository.properties" token="@user@" value="${cvs_user}" />
		<replace file="${eclipse-home}/dropins/eclipse/plugins/${org.eclipse.team.tests.cvs.core}/repository.properties" token="@password@" value="${cvs_password}" />
		<replace file="${eclipse-home}/dropins/eclipse/plugins/${org.eclipse.team.tests.cvs.core}/repository.properties" token="@host@" value="${cvs_host}" />
		<replace file="${eclipse-home}/dropins/eclipse/plugins/${org.eclipse.team.tests.cvs.core}/repository.properties" token="@root@" value="${cvs_root}" />
	</target>

	<target name="configureDeltaPack" if="pdebuild">
		<property name="deltapackArchive" value="eclipse-${e4.buildLabel}-delta-pack.zip" />
		<property name="installDeltapack" value="${install}/deltapack" />
		<mkdir dir="${installDeltapack}" />
		<exec dir="." executable="unzip">
			<arg line="-o -qq ${deltapackArchive} -d ${installDeltapack}" />
		</exec>
	</target>

	<macrodef name="updateTestResult">
		<attribute name="testPlugin" />
		<sequential>
			<!-- grab the status summary -->
			<loadfile srcfile="${results}/html/@{testPlugin}_${platform}.html" property="@{testPlugin}_status" failonerror="false" >
				<filterchain>
					<linecontainsregexp>
						<regexp pattern=".*&lt;td&gt;[0-9]*&lt;/td&gt;&lt;td&gt;[0-9]*&lt;/td&gt;&lt;td&gt;(NaN|([.0-9]*%))&lt;/td&gt;.*" />
					</linecontainsregexp>
					<replaceregex pattern="&lt;td&gt;" replace="&lt;td align=&quot;center&quot; style=&quot;color:black&quot;&gt;" flags="g" />
					<striplinebreaks/>
				</filterchain>
			</loadfile>
			
			<echo message="${@{testPlugin}_status}"/>
			
			<!-- if we couldn't read a status, use DNF -->
			<condition property="@{testPlugin}_value" value="${@{testPlugin}_status}" else="&lt;td align=&quot;center&quot; style=&quot;color:black&quot;&gt;DNF&lt;/td&gt;" >
				<isset property="@{testPlugin}_status" />
			</condition>
			
			<!-- results will be red if they arent't 100% -->
			<condition property="@{testPlugin}_color" value="black" else="red">
				<contains string="${@{testPlugin}_value}" substring="100.00%" />
			</condition>
			<loadresource property="@{testPlugin}_result" >
				<string value="${@{testPlugin}_value}" />
				<filterchain>
					<replaceregex pattern="color:black" replace="color:${@{testPlugin}_color}" flags="g"/>
				</filterchain>
			</loadresource>
			
			<echo message="@{testPlugin}_result : ${@{testPlugin}_result}" />
			<loadresource property="@{testPlugin}_token" >
				<string value="@{testPlugin}" />
				<filterchain>
					<replaceregex pattern="^org.eclipse." replace="" />
				</filterchain>
			</loadresource>
			<echo message="@{testPlugin}_token : ${@{testPlugin}_token}"/>
			<replace file="${results}/testResults.html" >
				<replacefilter token=" ${@{testPlugin}_token} " 
					value="&lt;a href=&quot;html/@{testPlugin}_${platform}.html&quot;&gt;${@{testPlugin}_token}&lt;/a&gt; ${@{testPlugin}_result}" />
			</replace>
		</sequential>
	</macrodef>
	
	<macrodef name="runTests">
		<attribute name="testPlugin" />
		<attribute name="additionalPlugins" default="" />
		<sequential>

			<!--alwasy use eclipse executable to launch tests with the exception of performance tests-->
			<!--condition property="useEclipseExe" value="true">
				<not>
					<equals arg1="${test.target}" arg2="performance"/>
				</not>
			</condition-->

			<condition property="performance.target.present" value="true">
				<isset property="@{testPlugin}.has.performance.target" />
			</condition>

			<!--override the value of this property with performance if the tests run on performance machine-->
			<property name="test.target" value="junit" />
			<property name="report" value="@{testPlugin}" />


			<!--install db plug-ins if running performance tests-->
			<condition property="derby" value="eclipse/dropins/eclipse/plugins/org.apache.derby*/**">
				<equals arg1="${test.target}" arg2="performance" />
			</condition>
			<!--	<property name="derby" value="" />  -->
			<antcall target="${test.target}">
				<param name="testPlugin" value="@{testPlugin}" />
				<param name="output-file" value="@{testPlugin}.xml" />
				<param name="vmargs" value=" -Xms40m -Xmx384m -XX:MaxPermSize=256m" />
				<param name="additionalPlugins" value="@{additionalPlugins}" />
			</antcall>
			
			<updateTestResult testPlugin="@{testPlugin}" />
		</sequential>
	</macrodef>

	<target name="junit" unless="skip.test">
		<antcall target="setup"/>
		<!--library.xml is now in dropins folder -->
		<property name="library-file" value="${eclipse-home}/plugins/${org.eclipse.test}/library.xml" />
		<property name="junit-stylesheet" value="${eclipse-home}/plugins/${org.eclipse.test}/JUNIT.XSL" />
		<echo>trying to find ${testPlugin}_v*</echo>
		<fileset id="test.plugin.file" dir="${eclipse-home}/plugins">
			<filename name="${testPlugin}_*/test.xml"/>
		</fileset>
		<property name="testPluginX" refid="test.plugin.file"/>
		
		<condition property="${testPlugin}_exists">
			<length string="${testPluginX}" trim="true" length="0" when="greater" />
		</condition>
		<antcall target="launchJUnit" />		
	</target>

	<target name="launchJUnit" if="${testPlugin}_exists" >
		<echo>trying to find ${testPluginX}</echo>
		<ant antfile="${eclipse-home}/plugins/${testPluginX}" dir="${eclipse-home}" />
		<antcall target="genResults" />
	</target>
	
	<target name="performance" if="performance.target.present" unless="skip.test">
		<antcall target="setup" />
		<ant antfile="${eclipse-home}/dropins/eclipse/plugins/${testPlugin}/test.xml" dir="${eclipse-home}" target="performance" />
		<antcall target="genResults" />
	</target>

	<target name="genResults">
		<copy file="${eclipse-home}/${report}.xml" tofile="${results}/xml/${report}_${platform}.xml" failonerror="false" />
		<style style="${eclipse-home}/plugins/${org.eclipse.test}/JUNIT.XSL" basedir="${results}/xml" destdir="${results}/html" />
	</target>

	<target name="ant">
		<runTests testPlugin="org.eclipse.ant.tests.core" />
	</target>

	<target name="antui">
		<runTests testPlugin="org.eclipse.ant.tests.ui" />
	</target>

	<target name="debug">
		<runTests testPlugin="org.eclipse.debug.tests" />
	</target>
		
	<target name="compare">
		<runTests testPlugin="org.eclipse.compare.tests" />
	</target>

	<target name="coreresources">
		<runTests testPlugin="org.eclipse.core.tests.resources" />
	</target>

	<target name="coreruntime">
		<runTests testPlugin="org.eclipse.core.tests.runtime" />
	</target>

	<target name="osgi">
		<runTests testPlugin="org.eclipse.osgi.tests" />
	</target>

	<target name="coreexpressions">
		<runTests testPlugin="org.eclipse.core.expressions.tests" />
	</target>

	<target name="ltkuirefactoringtests">
		<runTests testPlugin="org.eclipse.ltk.ui.refactoring.tests" />
	</target>

	<target name="ltkcorerefactoringtests">
		<runTests testPlugin="org.eclipse.ltk.core.refactoring.tests" />
	</target>

	<target name="text">
		<runTests testPlugin="org.eclipse.text.tests" />
	</target>

	<target name="jface">
		<runTests testPlugin="org.eclipse.jface.text.tests" />
	</target>

	<target name="jfacedatabinding">
		<runTests testPlugin="org.eclipse.jface.tests.databinding" />
	</target>

	<target name="filebuffers">
		<runTests testPlugin="org.eclipse.core.filebuffers.tests" />
	</target>

	<target name="jdttext" unless="skip.jdttext">
		<runTests testPlugin="org.eclipse.jdt.text.tests" />
	</target>

	<target name="relEng" depends="setRuntimeArchive">
		<runTests testPlugin="org.eclipse.releng.tests" />
		<move todir="${results}/chkpii" includeEmptyDirs="no" failonerror="false">
			<fileset dir="${results}/chkpii" />
			<mapper type="glob" from="*" to="${platform}_*" />
		</move>
	</target>

	<target name="ua">
		<runTests testPlugin="org.eclipse.ua.tests" />
	</target>

	<target name="coretestsnet">
		<runTests testPlugin="org.eclipse.core.tests.net" />
	</target>

	<target name="jdtcorecompiler" depends="setJVMProperties">
		<condition property="jvm" value="${J2SE-5.0}">
			<isset property="J2SE-5.0" />
		</condition>
		<runTests testPlugin="org.eclipse.jdt.core.tests.compiler" />
	</target>

	<target name="jdtapt" depends="setJVMProperties">
		<property name="jvm" value="${J2SE-5.0}" />
		<!--only run test if J2SE-5.0 property  set-->
		<condition property="skip.test">
			<not>
				<isset property="J2SE-5.0" />
			</not>
		</condition>
		<runTests testPlugin="org.eclipse.jdt.apt.tests" />
	</target>

	<target name="jdtaptpluggable" depends="setJVMProperties">
		<property name="jvm" value="${J2SE-6.0}" />
		<!--only run test if J2SE-5.0 property  set-->
		<condition property="skip.test">
			<not>
				<isset property="J2SE-6.0" />
			</not>
		</condition>
		<runTests testPlugin="org.eclipse.jdt.apt.pluggable.tests" />
	</target>


	<target name="jdtcorebuilder" depends="setJVMProperties">
		<!--Run with 1.5 vm if it is available-->
		<condition property="jvm" value="${J2SE-5.0}">
			<isset property="J2SE-5.0" />
		</condition>
		<runTests testPlugin="org.eclipse.jdt.core.tests.builder" />
	</target>

	<target name="jdtcompilertool" depends="setJVMProperties">
		<property name="jvm" value="${J2SE-6.0}" />
		<!--only run test if J2SE-6.0 property  set-->
		<condition property="skip.test">
			<not>
				<isset property="J2SE-6.0" />
			</not>
		</condition>
		<runTests testPlugin="org.eclipse.jdt.compiler.tool.tests" />
	</target>

	<target name="jdtcompilerapt" depends="setJVMProperties">
		<property name="jvm" value="${J2SE-6.0}" />
		<!--only run test if J2SE-6.0 property  set-->
		<condition property="skip.test">
			<not>
				<isset property="J2SE-6.0" />
			</not>
		</condition>
		<runTests testPlugin="org.eclipse.jdt.compiler.apt.tests" />
	</target>

	<target name="jdtcoremodel" depends="setJVMProperties">
		<condition property="jvm" value="${J2SE-5.0}">
			<isset property="J2SE-5.0" />
		</condition>
		<runTests testPlugin="org.eclipse.jdt.core.tests.model" />
	</target>

	<target name="jdtcoreperf">
		<runTests testPlugin="org.eclipse.jdt.core.tests.performance" />
	</target>

	<target name="jdtdebug">
		<runTests testPlugin="org.eclipse.jdt.debug.tests" />
	</target>

	<target name="jdtui">
		<runTests testPlugin="org.eclipse.jdt.ui.tests" />
	</target>

	<target name="jdtuirefactoring">
		<runTests testPlugin="org.eclipse.jdt.ui.tests.refactoring" />
	</target>

	<target name="pdeui">
		<runTests testPlugin="org.eclipse.pde.ui.tests" />
	</target>

	<target name="pdebuild">
		<property name="pdebuild" value="true" />
		<runTests testPlugin="org.eclipse.pde.build.tests" />
	</target>

	<target name="swt">
		<runTests testPlugin="org.eclipse.swt.tests" />
	</target>

	<target name="teamcore">
		<runTests testPlugin="org.eclipse.team.tests.core" />
	</target>

	<target name="teamcvs">
		<property name="teamcvs" value="true" />
		<runTests testPlugin="org.eclipse.team.tests.cvs.core" />
	</target>

	<target name="ui">
		<runTests testPlugin="org.eclipse.ui.tests" />
	</target>

	<target name="uinavigator">
		<runTests testPlugin="org.eclipse.ui.tests.navigator" />
	</target>

	<target name="uircp">
		<runTests testPlugin="org.eclipse.ui.tests.rcp" />
	</target>

	<target name="uiforms">
		<runTests testPlugin="org.eclipse.ui.tests.forms" />
	</target>

	<target name="uieditors">
		<runTests testPlugin="org.eclipse.ui.editors.tests" />
	</target>

	<target name="uiperformance">
		<runTests testPlugin="org.eclipse.ui.tests.performance" />
	</target>

	<target name="uiviews">
		<runTests testPlugin="org.eclipse.ui.tests.views.properties.tabbed" />
	</target>

	<target name="uiworkbenchtexteditor">
		<runTests testPlugin="org.eclipse.ui.workbench.texteditor.tests" />
	</target>

	<target name="update">
		<runTests testPlugin="org.eclipse.update.tests.core" />
	</target>

	<target name="pdeapitooling" depends="setJVMProperties">
		<property name="jvm" value="${J2SE-5.0}" />
		<!--only run test if J2SE-5.0 property  set-->
		<condition property="skip.test">
			<not>
				<isset property="J2SE-5.0" />
			</not>
		</condition>
		<runTests testPlugin="org.eclipse.pde.api.tools.tests" />
	</target>

	<target name="equinoxsecurity">
		<runTests testPlugin="org.eclipse.equinox.security.tests" />
	</target>

	<target name="equinoxp2" depends="setJVMProperties">
		<property name="jvm" value="${J2SE-5.0}" />
		<!--only run test if J2SE-5.0 property  set-->
		<condition property="skip.test">
			<not>
				<isset property="J2SE-5.0" />
			</not>
		</condition>
		<property name="org.eclipse.equinox.p2.tests.prerequisite.testplugins" value="eclipse/plugins/org.eclipse.equinox.frameworkadmin.test_* eclipse/plugins/org.eclipse.equinox.p2.installer_*" />
		<runTests testPlugin="org.eclipse.equinox.p2.tests" />
	</target>

	<target name="equinoxp2ui" depends="setJVMProperties">
		<property name="jvm" value="${J2SE-5.0}" />
		<!--only run test if J2SE-5.0 property  set-->
		<condition property="skip.test">
			<not>
				<isset property="J2SE-5.0" />
			</not>
		</condition>
		<runTests testPlugin="org.eclipse.equinox.p2.tests.ui" />
	</target>

	<target name="search">
		<runTests testPlugin="org.eclipse.search.tests" />
	</target>

	<target name="all">
		<antcall target="jdtcompilertool" />
		<antcall target="jdtcompilerapt" />
		<antcall target="jdttext" />
		<antcall target="relEng" />
		<antcall target="pdeui" />
		<antcall target="ant" />
		<antcall target="compare" />
		<antcall target="coreruntime" />
		<antcall target="coreresources" />
		<antcall target="osgi" />
		<antcall target="coreexpressions" />
		<antcall target="update" />
		<antcall target="teamcore" />
		<antcall target="jdtcoreperf" />
		<antcall target="jdtcorebuilder" />
		<antcall target="jdtcorecompiler" />
		<antcall target="jdtcoremodel" />
		<antcall target="ui" />
		<antcall target="uiperformance" />
		<antcall target="uieditors" />
		<antcall target="uinavigator" />
		<antcall target="uiworkbenchtexteditor" />
		<antcall target="uircp" />
		<antcall target="uiviews" />
		<antcall target="jdtdebug" />
		<antcall target="jdtui" />
		<antcall target="jdtuirefactoring" />
		<antcall target="ltkuirefactoringtests" />
		<antcall target="ltkcorerefactoringtests" />
		<antcall target="text" />
		<antcall target="jface" />
		<antcall target="jfacedatabinding" />
		<antcall target="filebuffers" />
		<antcall target="antui" />
		<antcall target="swt" />
		<antcall target="teamcvs" />
		<antcall target="coretestsnet" />
		<antcall target="jdtapt" />
		<antcall target="pdebuild" />
		<antcall target="jdtaptpluggable" />
		<antcall target="ua" />
		<antcall target="uiforms" />
		<antcall target="pdeapitooling" />
		<antcall target="equinoxsecurity" />
		<antcall target="equinoxp2" />
		<antcall target="equinoxp2ui" />
		<antcall target="search" />
	</target>

	<target name="cssSwt">
		<runTests testPlugin="org.eclipse.e4.ui.tests.css.swt" />
	</target>

	<target name="cssCore">
		<runTests testPlugin="org.eclipse.e4.ui.tests.css.core" />
	</target>

	<target name="e4xwt">
		<runTests testPlugin="org.eclipse.e4.xwt.tests" />
	</target>

	<target name="coreServices">
		<runTests testPlugin="org.eclipse.e4.core.tests.services" />
	</target>

	<target name="e4Lang">
		<runTests testPlugin="org.eclipse.e4.languages.javascript.test" />
	</target>

	<target name="e4ui">
		<runTests testPlugin="org.eclipse.e4.ui.tests" />
	</target>
	
	<target name="e4menu">
		<runTests testPlugin="org.eclipse.e4.ui.menu.tests" additionalplugins="org.eclipse.e4.ui.menu.tests.p1,org.eclipse.e4.ui.menu.tests.p2,org.eclipse.e4.ui.menu.tests.p3,org.eclipse.e4.ui.menu.tests.p4"/>
	</target>

	<target name="e4tm">
		<runTests testPlugin="org.eclipse.e4.tm.builder.tests" />
	</target>

	<target name="e4tmJavascript">
		<runTests testPlugin="org.eclipse.e4.emf.javascript.tests" />
	</target>

	<target name="e4xwtEmf">
		<runTests testPlugin="org.eclipse.e4.xwt.emf.test" />
	</target>

	<target name="e4Commands">
		<runTests testPlugin="org.eclipse.e4.core.commands.tests" />
	</target>

	<target name="e4bindings">
		<runTests testPlugin="org.eclipse.e4.ui.bindings.tests" />
	</target>

	<target name="semanticResources">
		<runTests testPlugin="org.eclipse.core.resources.semantic.test" />
	</target>

	<target name="semanticUi">
		<runTests testPlugin="org.eclipse.ui.resources.semantic.examples.test" />
	</target>

	<target name="coreTests">
		<runTests testPlugin="org.eclipse.e4.core.tests" />
	</target>
	
	<target name="discoveryCompatibility">
		<runTests testPlugin="org.eclipse.platform.discovery.compatibility.tests" />
	</target>
	
	<target name="discoveryCore">
		<runTests testPlugin="org.eclipse.platform.discovery.core.test.unit" />
	</target>
	
	<target name="discoveryIntegration">
		<runTests testPlugin="org.eclipse.platform.discovery.integration.test.unit" />
	</target>
	
	<target name="discoveryRuntime">
		<runTests testPlugin="org.eclipse.platform.discovery.runtime.test.unit" />
	</target>
		
		
	<target name="discoveryUIComp">
		<runTests testPlugin="org.eclipse.platform.discovery.ui.test.comp" />
	</target>
	
	<target name="discoveryUIUnit">
		<runTests testPlugin="org.eclipse.platform.discovery.ui.test.unit" />
	</target>
			
	<target name="discoveryUtilUnit">
		<runTests testPlugin="org.eclipse.platform.discovery.util.test.unit" />
	</target>

	<target name="e4">
		<antcall target="coreresources" />
		<antcall target="cssSwt" />
		<antcall target="cssCore" />
		<antcall target="e4xwt" />
		<!-- bug 331225 <antcall target="e4xwtEmf" />-->
		<antcall target="coreServices" />
		<antcall target="e4ui" />
		<antcall target="e4tm" />
		<antcall target="e4tmJavascript" />
		<antcall target="e4Commands" />
		<antcall target="e4bindings" />
		<antcall target="semanticResources" />
		<antcall target="semanticUi" />
		<antcall target="coreTests" />
	</target>
	
	<target name="e4less">
		<copy file="${basedir}/testResultsE4.html" tofile="${results}/testResults.html" />
		<antcall target="e4tm" />
		<antcall target="e4tmJavascript" />
		<antcall target="e4Commands" />
		<antcall target="e4bindings" />
		<!--antcall target="semanticResources" /-->
		<antcall target="semanticUi" />
		<antcall target="discoveryCompatibility"/>
		<antcall target="discoveryCore"/>
		<antcall target="discoveryIntegration"/>
		<antcall target="discoveryRuntime"/>
		<antcall target="discoveryUIComp"/>
		<antcall target="discoveryUIUnit"/>
		<antcall target="discoveryUtilUnit"/>
		<antcall target="cleanup" />
	</target>
	
	<target name="sdk">
		<copy file="${basedir}/testResultsSDK.html" tofile="${results}/testResults.html" />
		
		<antcall target="ant" />
		<antcall target="antui" />
		<antcall target="debug" />
		<antcall target="jdttext" />
		<antcall target="jdtcompilerapt" />
		<antcall target="jdtui" />
		<antcall target="jface" />
		<antcall target="pdeui" />
		<antcall target="text" />
		<antcall target="compare" />
		<antcall target="jdtdebug" />
        <antcall target="ltkuirefactoringtests" />
        <antcall target="ua" />
        <antcall target="uiforms" />
        <antcall target="equinoxp2ui" />
        <antcall target="search" />
		<antcall target="cssSwt" />
		<antcall target="cssCore" />
		<antcall target="e4ui" />
		<antcall target="e4menu" />
		<antcall target="coreServices" />
		<antcall target="coreTests" />
		
		<antcall target="cleanup"/>
	</target>
</project>
